12th August 2022

Task Completed
- Learning basic concept and knowledge about R programming
- R vs Python Advantages and Challenges
- Brief go-through of what can R programming done (Packages "palmerpenguin")
- Comparision between spreadsheet, SQL, Python vs R
- Downloading R and R Studio
- How to use R Studio (IDE) - panes, tabs, functions, installed packages etc.

install.packages("tidyverse")
- Installed basic packages in R Studio
library("tidyverse")

------------------------------------------------------------------------------

13th August 2022

<- Assign operator for R programming

# BASIC
> first_variable <- "This is my new variable"
> first_variable
[1] "This is my new variable"
> print("first_variable")
[1] "first_variable"
> second_variable <- 250000
> second_variable
[1] 250000
> newvalue <- 100000
> second_variable - newvalue
[1] 150000

# VECTOR
> vec_1 <- c(13, 25, 62, 91, 101)
> vec_1
[1]  13  25  62  91 101
> vec_1 * 5
[1]  65 125 310 455 505

# You cannot have a vector that contains both logicals and numerics. 
# c() function (called the “combine” function). The c() function in R combines multiple values into a vector
# To create a vector of integers using the c() function, you must place the letter "L" directly after each number.
e.g. c(1L, 5L, 15L)
# typeof() function. Place the code for the vector inside the parentheses of the function. When you run the function, R will tell you the type. For example: 
e.g. 

Typeof function
typeof(c(“a” , “b”))
> [1] "character"
# Similar to Python type()

Length function
x <- c(33.5, 57.75, 120.05)
length(x)

IS function
is.logical(), is.double(), is.integer(), is.character()

Names function
x <- c(1, 3, 5)
# You can use the names() function to assign a different name to each element of the vector. 

names(x) <- c("a", "b", "c")
x 
#> a b c 
#> 1 3 5

STR function to check Data Types
str(list("a", 12.5, 100, TRUE))
List of 4
 $ : chr "a"
 $ : num 12.5
 $ : num 100
 $ : logi TRUE
 
DATE TIME - today() and now() function
 > today()
[1] "2022-08-13"
> now()
[1] "2022-08-13 11:11:00 UTC"

TURNING STRING INTO DATETIME - ymd(x) function
> date1 <- "22nd March 1994"
> dmy(date1)
[1] "1994-03-22"

These functions also take unquoted numbers and convert them into the yyyy-mm-dd format.
ymd(20210120)
#> [1] "2021-01-20"

date1 <- "22nd March 1994 05:10:20"
> dmy_hms(date1)
[1] "1994-03-22 05:10:20 UTC"

as_date() to convert a date-time to a date. 
> as_date(now())
[1] "2022-08-13"

Other Filing Function
dir.create ("destination_folder")
file.create (“new_text_file.txt”) 
file.create (“new_word_file.docx”) 
file.create (“new_csv_file.csv”) 
unlink (“some_.file.csv”) # To delete file
